---

---

<script>
  const hasVisited = sessionStorage.getItem('hasVisited'),
  loadingScreen = document.querySelector('#loadingScreen') as HTMLElement,
  loadingCounter = document.querySelector('.load-box__counter') as HTMLElement,
  loadingProgess = document.querySelector('.load-box__progress') as HTMLElement;

  const showLoadingScreen = () => {
    let progress: number = 0;

    let progressInterval = setInterval(() => {
      progress += Math.random() * 25;
      if (progress > 100) progress = 100;

      loadingCounter.textContent = `${Math.round(progress)}%`;
      loadingProgess.style.width = progress + '%';

      if (progress >= 100) {
        clearInterval(progressInterval);
        // Esperar un poco antes de ocultar
        setTimeout(hideLoading, 500);
      }
    }, 200);
  }

  const hideLoading = () => {
    loadingScreen?.classList.add('hidden');

    sessionStorage.setItem('hasVisited', 'true');

    setTimeout(() => {
      loadingScreen.style.display = 'none';
    }, 500);
  }
  
  // Verificar si es la primera visita en esta sesión
  if (hasVisited) {
    loadingScreen.style.display = 'none';
  } else {
    showLoadingScreen();
  }

  // Asegurar que el loading se oculte cuando la página esté completamente cargada
  window.addEventListener('load', () => {
    if (!hasVisited) {
      setTimeout(() => {
        if (!loadingScreen.classList.contains('hidden')) {
          hideLoading();
        }
      }, 1100)
    }
  });
</script>

<section class="loading-screen" id="loadingScreen">
  <div class="scenes">
    <div class="scenes__scene">
      <div class="scenes__dot"></div>
    </div>
  </div>
  <div class="load-box">
    <p class="load-box__text">
      cargando: <span class="load-box__counter">0%</span>
    </p>
    <div class="load-box__container">
      <div class="load-box__progress"></div>
    </div>
  </div>
</section>

<style lang="scss">
  .loading-screen {
    position: fixed;
    inset: 0;
    width: 100dvw;
    height: 100dvh;
    z-index: 999;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 1;
    transition: opacity 0.5s ease-out;

    &.hidden {
      opacity: 0;
      pointer-events: none;
    }
  }
  
  .scenes {
    width: 100%;
    height: 100%;
    margin: 0 auto;
    transform: scale(1);
    transform-origin: 0 0;

    &__scene {
      width: 100%;
      height: 100%;
      position: relative;
      overflow: hidden;
      background-color: var(--color-bg);
    }
    
    &__dot {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 0.2em;
      height: 0.2em;
      background-color: #97f4ff;
      box-shadow: 0 0 .2em .13em #52a8e8, 0 0 0 0 #298df4;
      border: 0px solid var(--color-bg);
      outline: 0px solid #298df4;
      filter: drop-shadow(0 0 5px #298df4);
      opacity: 0;
      animation: dot-anim linear 1.834s infinite;
      border-radius: 50%;
    }
  }

  @keyframes dot-anim {
    45% {
      opacity: 1;
    }
    46% {
      border: 0px solid var(--color-bg);
      outline: 0px solid #298df4;
      box-shadow: 0 0 .2em .13em #52a8e8, 0 0 5px 6px #298df4;
      filter: drop-shadow(0 0 5px #298df4);
    }
    50% {
      border: 101px solid var(--color-bg);
      outline: 72px solid #298df4;
      box-shadow: 0 0 .2em .13em #52a8e8, 0 0 0 0 #298df4;
      filter: drop-shadow(0 0 0px #298df4);
    }
    52% {
      border: 245px solid var(--color-bg);
      outline: 10px solid #298df4;
    }
    55% {
      opacity: 1;
      border: 317px solid var(--color-bg);
      outline: 3px solid #298df4;
    }
    81% {
      opacity: 0;
      border: 549px solid var(--color-bg);
      outline: 0px solid #298df4;
    }
  }

  .load-box {
    position: absolute;
    bottom: 30%;
    width: 50dvw;
    display: flex;
    flex-direction: column;
    gap: .5rem;

    &__text {
      text-transform: uppercase;
      font-family: var(--font-family-3);
      color: var(--color-text);
      text-shadow: var(--color-text) 0px 0px 10px;
    }
    &__container {
      display: block;
      background-color: var(--color-bg);
      height: 20px;
      outline: var(--color-main-1) solid 1px;
      outline-offset: 2px;
      box-shadow: var(--color-main-1) 0px 5px 20px;
      transform: skewX(-20deg);
    }
    &__progress {
      background-color: var(--color-main-2);
      display: block;
      width: 0%;
      height: 100%;
    }

    @media screen and (width >= 1024px) {
      width: 30dvw;
    }
  }

:global([data-theme='light']) {
  .load-box {
    &__text {
      text-shadow: var(--color-main-1) 0px 0px 10px;
    }
  }
}
</style>