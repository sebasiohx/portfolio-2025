---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import Icon from '@components/Icon.astro';
//import '@splidejs/splide/css';

const recommendations = await getCollection('recommendation');
---

<script>
  import Splide from '@splidejs/splide';

  // Configuracion del slider Recomendaciones
  document.addEventListener('DOMContentLoaded', () => {
    const recommendationSlider = new Splide('#slider-recommendations', {
      type: 'loop',
      autoplay: false,
      perPage: 1,
      perMove: 1,
      pagination: false,
      arrows: true,
      gap: '2rem',
    });

    recommendationSlider.mount();

    // Configurar paginación personalizada
    const paginationDots = document.querySelectorAll('.pagination-dot');
    const totalSlides = document.querySelectorAll('.splide__slide').length;

    // Función para actualizar el estado activo de los puntos
    const updatePaginationDots = (activeIndex: number) => {
      paginationDots.forEach((dot, index) => {
        dot.classList.remove('active');
        // Añadir clase 'active' al punto correspondiente
        if (index === activeIndex % totalSlides) {
          dot.classList.add('active');
        }
      });
    };

    // Event listeners para los puntos de paginación
    paginationDots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        // Ir al slide específico
        recommendationSlider.go(index);
        // Actualizar estado de paginación
        updatePaginationDots(index);
      });
    });

    // Escuchar cambios de slides para actualizar paginación
    recommendationSlider.on('moved', function (newIndex) {
      updatePaginationDots(newIndex);
    });

    // Inicializar estado de paginación
    updatePaginationDots(0);
  });
</script>

<div id='slider-recommendations' class='slider-recommendations splide'>
  <div class='splide__track'>
    <ul class='splide__list'>
      {
        recommendations.map((reco) => (
          <li class='splide__slide'>
            <article class='card-recommendation'>
              <figure class='card-recommendation__header'>
                <div class='card-recommendation__avatar'>
                  <Image
                    src={reco.data.avatar}
                    alt={`Avatar de ${reco.data.name}`}
                    width={100}
                    height={100}
                    class='card-recommendation__img'
                  />
                </div>
                <figcaption class='card-recommendation__hgroup'>
                  <h4 class='card-recommendation__name'>{reco.data.name}</h4>
                  <h5 class='card-recommendation__position'>
                    {reco.data.position}
                  </h5>
                </figcaption>
              </figure>
              {reco.data.text.map((p) => (
                <p class='card-recommendation__text'>{p}</p>
              ))}
            </article>
          </li>
        ))
      }
    </ul>
  </div>
  <div class='splide__controls'>
    <ul class='custom__pagination'>
      {
        recommendations.map((_, index) => (
          <li>
            <button
              class={`pagination-dot ${index === 0}`}
              data-slide={index}
              aria-label={`Ir al slide ${index}`}
            />
          </li>
        ))
      }
    </ul>
    <div class='splide__arrows'>
      <button
        class='splide__arrow splide__arrow--prev'
        title='trabajo anterior'
      >
        <Icon icon='arrowSlider' size={30} color='var(--color-bg)' />
      </button>
      <button
        class='splide__arrow splide__arrow--next'
        title='trabajo siguiente'
      >
        <Icon icon='arrowSlider' size={30} color='var(--color-bg)' />
      </button>
    </div>
  </div>
</div>

<style lang='scss'>
  .slider-recommendations.splide {
    .splide__track {
      margin: 0 1rem;
    }
    .splide__controls {
      position: relative;
      background-color: var(--color-main-1);
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 0.2rem 1rem;
    }
    .custom__pagination {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      gap: 1rem;
      margin: 0;
      pointer-events: none;
    }
    .pagination-dot {
      width: 1rem;
      height: 1rem;
      background-color: var(--color-main-1-d1);
      border: 2px solid var(--color-main-2);
      cursor: pointer;
      pointer-events: auto;

      &:hover,
      &.active {
        background-color: var(--color-main-2);
      }
    }
    .splide__arrows {
      height: 38px;
      display: flex;
      gap: 1rem;

      .splide__arrow {
        background-color: var(--color-main-1);
        padding: 0.25rem;
        cursor: pointer;

        &:hover {
          background-color: var(--color-main-1-d1);
          transition: background-color 0.3s ease-in-out;
        }
        &[disabled]:hover {
          background-color: var(--color-main-1);
        }
      }
      .splide__arrow--prev {
        transform: rotate(180deg);
      }
    }
  }
  .card-recommendation {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background-color: var(--color-main-2-d3);
    clip-path: polygon(0% 0%, 95% 0%, 100% 10%, 100% 100%, 0% 100%);
    width: min(100%, 430px);
    height: 100%;
    margin: 0 auto 1rem;
    cursor: grab;

    &:active {
      cursor: grabbing;
    }

    &__header {
      display: flex;
      flex-direction: row;
      gap: 1rem;
      align-items: flex-start;
    }
    &__avatar {
      display: inline-block;
      width: 84px;
      height: 74px;
      clip-path: polygon(
        0% 0%,
        calc(100% - 10px) 0,
        100% 10px,
        100% 100%,
        10px 100%,
        0 calc(100% - 10px)
      );
    }
    &__img {
      object-fit: cover;
    }
    &__name {
      font-weight: bold;
      color: var(--color-text);
      font-family: var(--font-family-1);
      font-size: var(--size-18px);
      line-height: 20px;
    }
    &__position {
      font-style: italic;
      color: var(--color-text);
      font-family: var(--font-family-2);
      font-size: var(--size-12px);
    }
    &__text {
      color: var(--color-text);
      font-size: var(--size-12px);
    }

    @media screen and (width >= 768px) {
      &__avatar {
        width: 55px;
        height: 50px;
      }
      &__name {
        line-height: inherit;
      }
      &__position {
        font-size: var(--size-14px);
      }
      &__text {
        font-size: var(--size-14px);
      }
    }
  }
</style>
